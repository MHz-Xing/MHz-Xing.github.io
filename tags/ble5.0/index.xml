<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>BLE5.0 on Xing MHz</title>
    <link>https://MHz-Xing.github.io/tags/ble5.0/</link>
    <description>Recent content in BLE5.0 on Xing MHz</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zn-Hans</language>
    <lastBuildDate>Thu, 26 Dec 2019 11:43:23 +0800</lastBuildDate>
    
	<atom:link href="https://MHz-Xing.github.io/tags/ble5.0/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>认识BLE5协议栈[九]--物理层</title>
      <link>https://MHz-Xing.github.io/blog/2019-12/%E8%AE%A4%E8%AF%86ble5%E5%8D%8F%E8%AE%AE%E6%A0%88%E4%B9%9D-%E7%89%A9%E7%90%86%E5%B1%82/</link>
      <pubDate>Thu, 26 Dec 2019 11:43:23 +0800</pubDate>
      
      <guid>https://MHz-Xing.github.io/blog/2019-12/%E8%AE%A4%E8%AF%86ble5%E5%8D%8F%E8%AE%AE%E6%A0%88%E4%B9%9D-%E7%89%A9%E7%90%86%E5%B1%82/</guid>
      <description>1. 简介 物理层（Physical Layer）是BLE协议栈最底层，它规定了BLE通信的基础射频参数，包</description>
    </item>
    
    <item>
      <title>认识BLE5协议栈[八]--链路层</title>
      <link>https://MHz-Xing.github.io/blog/2019-12/%E8%AE%A4%E8%AF%86ble5%E5%8D%8F%E8%AE%AE%E6%A0%88%E5%85%AB-%E9%93%BE%E8%B7%AF%E5%B1%82/</link>
      <pubDate>Thu, 26 Dec 2019 11:33:29 +0800</pubDate>
      
      <guid>https://MHz-Xing.github.io/blog/2019-12/%E8%AE%A4%E8%AF%86ble5%E5%8D%8F%E8%AE%AE%E6%A0%88%E5%85%AB-%E9%93%BE%E8%B7%AF%E5%B1%82/</guid>
      <description>&lt;p&gt;链路层LL（Link Layer）是协议栈中最重要的一层。&lt;/p&gt;

&lt;p&gt;链路层的核心是状态机，包含广播、扫描、发起和连接等几种状态，围绕这几种状态，BLE设备可以执行广播和连接等操作，链路层定义了在各种状态下的数据包格式、时序规范和接口协议。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>认识BLE5协议栈[七]--直接测试模式</title>
      <link>https://MHz-Xing.github.io/blog/2019-12/%E8%AE%A4%E8%AF%86ble5%E5%8D%8F%E8%AE%AE%E6%A0%88%E4%B8%83-%E7%9B%B4%E6%8E%A5%E6%B5%8B%E8%AF%95%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Thu, 26 Dec 2019 11:28:23 +0800</pubDate>
      
      <guid>https://MHz-Xing.github.io/blog/2019-12/%E8%AE%A4%E8%AF%86ble5%E5%8D%8F%E8%AE%AE%E6%A0%88%E4%B8%83-%E7%9B%B4%E6%8E%A5%E6%B5%8B%E8%AF%95%E6%A8%A1%E5%BC%8F/</guid>
      <description>&lt;p&gt;BLE协议充分考虑了设备的测试问题，在协议栈层面提供了直接测试模式，用于执行BLE设备的RF物理层一致性的测试。&lt;/p&gt;

&lt;p&gt;直接测试模式（Direct Test Mode）常简称为DTM。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>认识BLE5协议栈[六]--主机控制器接口</title>
      <link>https://MHz-Xing.github.io/blog/2019-12/%E8%AE%A4%E8%AF%86ble5%E5%8D%8F%E8%AE%AE%E6%A0%88%E5%85%AD-%E4%B8%BB%E6%9C%BA%E6%8E%A7%E5%88%B6%E5%99%A8%E6%8E%A5%E5%8F%A3/</link>
      <pubDate>Thu, 26 Dec 2019 11:24:30 +0800</pubDate>
      
      <guid>https://MHz-Xing.github.io/blog/2019-12/%E8%AE%A4%E8%AF%86ble5%E5%8D%8F%E8%AE%AE%E6%A0%88%E5%85%AD-%E4%B8%BB%E6%9C%BA%E6%8E%A7%E5%88%B6%E5%99%A8%E6%8E%A5%E5%8F%A3/</guid>
      <description>&lt;p&gt;BLE协议栈规定物理层、链路层和DTM层属于控制器，其他协议层属于主机，主机与控制器之间的通信是通过主机控制器接口传输层完成的。&lt;/p&gt;

&lt;p&gt;主机控制器接口常简称为HCI（Host Controller Interface）。&lt;/p&gt;

&lt;p&gt;HCI定义了一套“命令-事件”机制，主机向控制器发送HCI命令，控制器向主机返回命令执行结果。应用层的所有操作都会转换成HCI命令传给控制器。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>认识BLE5协议栈[五]--逻辑链路控制与适配协议层</title>
      <link>https://MHz-Xing.github.io/blog/2019-12/%E8%AE%A4%E8%AF%86ble5%E5%8D%8F%E8%AE%AE%E6%A0%88%E4%BA%94-%E9%80%BB%E8%BE%91%E9%93%BE%E8%B7%AF%E6%8E%A7%E5%88%B6%E4%B8%8E%E9%80%82%E9%85%8D%E5%8D%8F%E8%AE%AE%E5%B1%82/</link>
      <pubDate>Thu, 26 Dec 2019 11:11:15 +0800</pubDate>
      
      <guid>https://MHz-Xing.github.io/blog/2019-12/%E8%AE%A4%E8%AF%86ble5%E5%8D%8F%E8%AE%AE%E6%A0%88%E4%BA%94-%E9%80%BB%E8%BE%91%E9%93%BE%E8%B7%AF%E6%8E%A7%E5%88%B6%E4%B8%8E%E9%80%82%E9%85%8D%E5%8D%8F%E8%AE%AE%E5%B1%82/</guid>
      <description>&lt;p&gt;逻辑链路控制与适配协议通常简称为L2CAP（Logical Link Control and Adaptation Protocol），它向上连接应用层，向下连接控制器层，发挥主机与控制器之间的适配器的作用，使上层应用操作无需关心控制器的数据处理细节。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>认识BLE5协议栈[四]--属性协议层</title>
      <link>https://MHz-Xing.github.io/blog/2019-12/%E8%AE%A4%E8%AF%86ble5%E5%8D%8F%E8%AE%AE%E6%A0%88%E5%9B%9B-%E5%B1%9E%E6%80%A7%E5%8D%8F%E8%AE%AE%E5%B1%82/</link>
      <pubDate>Thu, 26 Dec 2019 11:05:41 +0800</pubDate>
      
      <guid>https://MHz-Xing.github.io/blog/2019-12/%E8%AE%A4%E8%AF%86ble5%E5%8D%8F%E8%AE%AE%E6%A0%88%E5%9B%9B-%E5%B1%9E%E6%80%A7%E5%8D%8F%E8%AE%AE%E5%B1%82/</guid>
      <description>&lt;p&gt;属性协议（Attribute Protocol）简称ATT。&lt;/p&gt;

&lt;p&gt;ATT层定义了属性实体的概念，包括UUID、句柄和属性值等，也规定了属性的读、写、通知等操作方法和细节，这些与属性操作相关的内容称为属性协议。ATT层规定了ATT_MTU值，如果属性值很长，超过了ATT_MTU限制，将使用特殊的读写方法进行操作。&lt;/p&gt;

&lt;p&gt;基于ATT层，可以构建出通用属性操作规范。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>认识BLE5协议栈[三]--通用属性规范层</title>
      <link>https://MHz-Xing.github.io/blog/2019-12/%E8%AE%A4%E8%AF%86ble5%E5%8D%8F%E8%AE%AE%E6%A0%88%E4%B8%89-%E9%80%9A%E7%94%A8%E5%B1%9E%E6%80%A7%E8%A7%84%E8%8C%83%E5%B1%82/</link>
      <pubDate>Thu, 26 Dec 2019 10:58:35 +0800</pubDate>
      
      <guid>https://MHz-Xing.github.io/blog/2019-12/%E8%AE%A4%E8%AF%86ble5%E5%8D%8F%E8%AE%AE%E6%A0%88%E4%B8%89-%E9%80%9A%E7%94%A8%E5%B1%9E%E6%80%A7%E8%A7%84%E8%8C%83%E5%B1%82/</guid>
      <description>&lt;p&gt;通用属性规范GATT（Generic Attribute Profile）将ATT层定义的属性打包成不同的属性实体，包括服务项、特征项和描述符，这些属性实体组合在一起组成规范，即GATT规范。GATT规范是服务项的集合，服务项是特征项的集合，特征项携带了属性参数和数据，描述符协助特征项描述特征值的形式和功能。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>认识BLE5协议栈[二]--安全管理层</title>
      <link>https://MHz-Xing.github.io/blog/2019-12/%E8%AE%A4%E8%AF%86ble5%E5%8D%8F%E8%AE%AE%E6%A0%88%E4%BA%8C-%E5%AE%89%E5%85%A8%E7%AE%A1%E7%90%86%E5%B1%82/</link>
      <pubDate>Thu, 26 Dec 2019 10:52:05 +0800</pubDate>
      
      <guid>https://MHz-Xing.github.io/blog/2019-12/%E8%AE%A4%E8%AF%86ble5%E5%8D%8F%E8%AE%AE%E6%A0%88%E4%BA%8C-%E5%AE%89%E5%85%A8%E7%AE%A1%E7%90%86%E5%B1%82/</guid>
      <description>&lt;p&gt;安全管理（Security Manager）定义了设备间的配对过程。&lt;/p&gt;

&lt;p&gt;配对过程包括了配对信息交换、生成密钥和交换密钥三个步骤。具有不同的输入输出能力的设备将采用不同的配对方式，两个设备完成配对将加密连接，产生LTK、IRK、CSRK等密钥，这些密钥将支持加密、隐私、签名等安全特性。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>认识BLE5协议栈[一]--通用访问规范层</title>
      <link>https://MHz-Xing.github.io/blog/2019-12/%E8%AE%A4%E8%AF%86ble5%E5%8D%8F%E8%AE%AE%E6%A0%88%E4%B8%80-%E9%80%9A%E7%94%A8%E8%AE%BF%E9%97%AE%E8%A7%84%E8%8C%83%E5%B1%82/</link>
      <pubDate>Thu, 26 Dec 2019 10:36:45 +0800</pubDate>
      
      <guid>https://MHz-Xing.github.io/blog/2019-12/%E8%AE%A4%E8%AF%86ble5%E5%8D%8F%E8%AE%AE%E6%A0%88%E4%B8%80-%E9%80%9A%E7%94%A8%E8%AE%BF%E9%97%AE%E8%A7%84%E8%8C%83%E5%B1%82/</guid>
      <description>&lt;p&gt;通用访问规范GAP（Generic Access Profile）是BLE设备内部功能对外的接口层，它规定了三个方面：GAP角色、模式和规程、安全问题。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>